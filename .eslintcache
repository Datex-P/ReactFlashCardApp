[{"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js":"1","/Users/fab/Downloads/reactapp/flashcardreact/src/App.js":"2","/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js":"3","/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx":"4","/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx":"5","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js":"6","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js":"7","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js":"8","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js":"9","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js":"10","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js":"11","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js":"12","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js":"13","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js":"14","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js":"15","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js":"16","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js":"17","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js":"18","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js":"19","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js":"20","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js":"21","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js":"22","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/HourlyBreakdown.js":"23","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CreateNewDeck.js":"24","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CutWord.js":"25","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/SaveAndDiscard.js":"26","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/RepeatBtn.js":"27","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagramm.js":"28","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddQuestionsToDeck.js":"29","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardname.js":"30","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/QuestAnswerTrainOverv.js":"31","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/LandingPage.js":"32","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/MenuContainer.js":"33","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/BasicOrangeWindow.js":"34"},{"size":511,"mtime":1608033487654,"results":"35","hashOfConfig":"36"},{"size":776,"mtime":1608039712942,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1608015684888,"results":"38","hashOfConfig":"36"},{"size":1070,"mtime":1608044007107,"results":"39","hashOfConfig":"36"},{"size":1070,"mtime":1608044007107,"results":"40","hashOfConfig":"36"},{"size":624,"mtime":1612119267278,"results":"41","hashOfConfig":"42"},{"size":616,"mtime":1612252825435,"results":"43","hashOfConfig":"42"},{"size":223,"mtime":1611914234419,"results":"44","hashOfConfig":"42"},{"size":4331,"mtime":1612618498482,"results":"45","hashOfConfig":"42"},{"size":480,"mtime":1611682140670,"results":"46","hashOfConfig":"42"},{"size":6687,"mtime":1612690142110,"results":"47","hashOfConfig":"42"},{"size":4855,"mtime":1612690142110,"results":"48","hashOfConfig":"42"},{"size":1118,"mtime":1611653553760,"results":"49","hashOfConfig":"42"},{"size":290,"mtime":1609859876733,"results":"50","hashOfConfig":"42"},{"size":181,"mtime":1609860000402,"results":"51","hashOfConfig":"42"},{"size":2299,"mtime":1612618793656,"results":"52","hashOfConfig":"42"},{"size":1707,"mtime":1610306068828,"results":"53","hashOfConfig":"42"},{"size":8390,"mtime":1612255775235,"results":"54","hashOfConfig":"42"},{"size":366,"mtime":1610617679230,"results":"55","hashOfConfig":"42"},{"size":535,"mtime":1610617895840,"results":"56","hashOfConfig":"42"},{"size":3294,"mtime":1612539262149,"results":"57","hashOfConfig":"42"},{"size":2813,"mtime":1611845504232,"results":"58","hashOfConfig":"42"},{"size":1261,"mtime":1611139444808,"results":"59","hashOfConfig":"42"},{"size":3499,"mtime":1612690142110,"results":"60","hashOfConfig":"42"},{"size":184,"mtime":1612525158894,"results":"61","hashOfConfig":"42"},{"size":628,"mtime":1611825445618,"results":"62","hashOfConfig":"42"},{"size":300,"mtime":1611825794607,"results":"63","hashOfConfig":"42"},{"size":2524,"mtime":1611845777343,"results":"64","hashOfConfig":"42"},{"size":2884,"mtime":1612525352619,"results":"65","hashOfConfig":"42"},{"size":1465,"mtime":1612612598261,"results":"66","hashOfConfig":"42"},{"size":8346,"mtime":1612690142116,"results":"67","hashOfConfig":"42"},{"size":5288,"mtime":1612690142110,"results":"68","hashOfConfig":"42"},{"size":2512,"mtime":1612684739945,"results":"69","hashOfConfig":"42"},{"size":1224,"mtime":1612689360599,"results":"70","hashOfConfig":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s5fd1k",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"gggxqh",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/App.js",["144"],"/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx",["145"],"/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js",[],["146","147"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js",["148","149"],"import React, { useState, useEffect } from 'react';\nimport BasicOrangeWindow from '../deck/BasicOrangeWindow'\nimport ThreeDotsBtn from '../deck/ThreeDotsBtn'\nimport { withRouter } from 'react-router-dom'\nimport PieDiagramm from './PieDiagramm';\nimport TimeAndProgess from './TimeAndProgress.js'\nimport HourlyBreakdown from './HourlyBreakdown.js'\nimport DeleteCardQuestionBox from '../deck/DeleteCardQuestionBox'\n\n\n\nfunction Stats({ history}) {\n\n  const [showDeleteFrame, setShowDeleteFrame] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const [show, setShow] = useState(false);\n\n\n  function setShowFunc() {\n    history.push('/')\n  }\n\n\n\n\n  return (\n    <div style={{\n    \n    width: '70%', height: '50%'}}>\n      <BasicOrangeWindow\n        show={true}\n        setShow={setShowFunc}\n        title={'Stats'}\n\n        menu={\n          <ThreeDotsBtn\n       \n          editName\n    \n            text={'stats'}\n            trashEvent={() => {\n              setShowDeleteFrame(true)\n            }}\n\n            // pauseEvent={() => {\n            //     // handlePause()\n            // }}\n            \n\n            style={{\n              position: 'absolute',\n              top: '17px', \n              right: '26px',\n              zIndex: '2000', \n              backgroundColor: 'white',\n              border: '1px solid black', \n              overflow: 'hidden'\n            }}\n            reset\n          />\n        }\n      >\n\n        <div>\n\n          <div style={{ width: '216px', textAlign: 'center', margin: 'auto', fontWeight: 'bold', fontSize: '17px' }}>Today's study breakdown</div>\n\n          <div style={{ marginBottom: '10px', border: '1px solid black' }} className='d-flex flex-direction column align-items-center'>\n\n        {\n          showDeleteFrame &&\n                <DeleteCardQuestionBox\n                  card='card'\n                  checked = {checked}\n                  setChecked = {setChecked}\n                  show={show}\n                  deleteFrame={() => setShowDeleteFrame(false)}\n                  // trashEvent={deleteCurrentCard}\n                  onHide={()=>{\n                 \n                  }}\n                  />\n                  }\n\n\n            <PieDiagramm />\n\n          </div>\n          <div className='theWordCalendar' style={{ marginTop: '20px', marginBottom: '3px', textAlign: 'center' }}>Calendar</div>\n\n          <div className='d-flex align-items-center justify-content-center'>\n\n            <ButtonLeftAndRight />\n\n          </div>\n\n          <HourlyBreakdown />\n\n        </div>\n\n        <div style={{width: '200px'}}>\n\n        </div>\n\n        <TimeAndProgess \n  \n        />\n\n      </BasicOrangeWindow>\n\n\n    </div>\n  )\n}\n\nexport default withRouter(Stats)\n\n\n\n\nfunction ButtonLeftAndRight() {\n  const [year, setYear] = useState(new Date().getFullYear())\n\n\n  const handleIncrement = () => {\n    setYear(year + 1);\n  };\n\n  const handleDecrement = () => {\n    setYear(year - 1);\n  };\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column'}}>\n      <div className='d-flex justify-content-center align-items-center' style={{marginTop: '-10px'}}>\n      {\n        \n        ['<', year, '>'].map(el =>\n\n          <div style={{ cursor: el === year ? 'default' : 'pointer', margin: el === year ? '5px' : '', width: '33px' }}\n\n            className={el !== year ? 'd-flex justify-content-center align-items-center calendarButtons' : ' align-items-center flex justify-content-center'}\n\n            onClick={el === '<' && el !== year ?\n              handleDecrement : handleIncrement\n            }\n          >\n            {el}\n          </div>\n        )\n      }\n      </div>\n        <RenderDays />\n    </div>\n  )\n}\n\nfunction RenderDays () {\n\n const [year, setNewYear] = useState(new Date().getFullYear())\n const [days, setDays] = useState([])\n\n  useEffect(()=> {\n\n    let date = [];\n    let thisYear = new Date(`January 1, ${+year}`);\n    \n    while (\n        thisYear.getMonth() !== 0 ||\n        thisYear.getDate() !== 1 ||\n        thisYear.getFullYear() === +year\n      ) {\n        date.push(thisYear.toDateString())\n        thisYear.setDate(thisYear.getDate() + 1);\n      }\n    setDays(date)\n  \n}, [year])\n\n\nreturn (\n\n<div className= 'yearBoxContainer'>\n  {\n    days.map(day=>\n      <div className='day'></div>\n    )\n  }\n</div>\n)\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js",["150"],"import React, { useState, useRef, useContext } from 'react'\nimport trashimg from '../../icons/trash.svg'\nimport pauseimg from '../../icons/pause.svg'\nimport editimg from '../../icons/edit.svg'\nimport resetimg from '../../icons/reset.svg'\nimport saveimg from '../../icons/save.svg'\nimport playimg from '../../icons/play.svg'\nimport useOutsideAlerter from '../../LittleComponents/useOutsideAlerter'\nimport {Context} from '../../Context';\nimport {withRouter} from 'react-router-dom'\n\n\n\nfunction ThreeDotsBtn({  \n  \n  text, showFromParent, style, \n  className, editName, nameOfTopDeck, \n  index, input, threeDotsContainer,\n  \n  setShowFromParent = () => { },\n  editEvent = () => { }, \n  trashEvent = () => { },\n  edit=false,trash=false,pause=false,reset=false,\n}) {\n\n  const [startAnimation, setStartAnimation] = useState(false)\n  const [pauseIsActive, setPauseIsActive] = useState(true)\n  \n  const [show, setShow] = useState(showFromParent);\n  const {dataBase, setDataBase} = useContext(Context);\n\n  let colors = ['#ffcdb2', '#ffb4a2', '#e5989b', '#b5838d', '#6d6875'];\n\n  const handleClick = () => {\n    setShow(!show);\n    setShowFromParent(!show)\n\n  };\n\n  const ref = useRef(null)\n\n\n  function handleDeckname() {\n    let newDataBase = {...dataBase}\n    newDataBase.DeckNames[index].name = nameOfTopDeck\n    //delete newDataBase.DeckNames[name]\n    console.log(newDataBase)\n    setDataBase(newDataBase)\n  }\n\n\n  useOutsideAlerter([ref,input], editName, ()=>{setShow(false)},()=>{\n    setStartAnimation(true)\n    // input.current.focus()\n    setTimeout(()=>{setStartAnimation(false)},2000)\n  } )\n    \n    \n  function handleEdit() {\n    editEvent() \n    // !editName && setShow(false) \n    // other way of writing it\n    if (!editName) {\n      setShow(false)\n\n      handleDeckname()\n    }\n  }\n  \n\n  function handlePause () {\n    let newDataBase = {...dataBase}\n    let savePausedState = !pauseIsActive\n    setPauseIsActive(savePausedState)\n    dataBase.DeckNames[index].paused = !dataBase.DeckNames[index].paused\n    setDataBase(newDataBase)\n    \n  }\n\n\n  return (\n    <>\n    {\n      index&& dataBase?.DeckNames[index].paused?\n    \n      null\n    :\n\n    <div style={threeDotsContainer}>\n\n      <div \n\n        className='rotateLittleModal' style={{height: '24px'}}\n        onClick={\n                editName? \n                handleClick                \n                : \n                ()=>{} \n                } \n      >\n              ...\n      </div>\n\n      {show\n        &&\n        \n        <div \n          ref={ref}\n          style={style}\n          className={`ml-2 rounded mt-2 ${className}`}>\n          {\n            edit&&\n\n            <button \n                    onClick={handleEdit} \n                    className='buttonStyling flexAlignCenter outline-none p-1 '>\n                    \n                    <img className={startAnimation ? 'blinkingIcon':''} \n                         src={editName? editimg: saveimg} \n                         alt='edit' \n                         style={{ marginRight: '3px' }}              \n                     />\n                      \n                      {text}\n            </button>}       \n          {\n            pause&&\n\n            <button className='buttonStyling flexAlignCenter outline-none p-1 '\n                    style={{ borderTop: '1px solid black', borderBottom: '1px solid black' ,\n                            borderLeft: dataBase.DeckNames[index].paused? '1px solid black': null,\n                            borderRight: dataBase.DeckNames[index].paused? '1px solid black': null,\n                            borderRadius: dataBase.DeckNames[index].paused? '5px': null\n                          }}\n\n                    onClick={handlePause}\n             >\n                <img src={ pauseIsActive? pauseimg: playimg}  \n                     alt='pause' \n                     style={{ marginRight: '3px'}} \n                />\n                {text}\n             </button>\n          }\n          {\n            trash && \n            \n            <button \n\n              className='buttonStyling flexAlignCenter outline-none p-1 '\n              onClick={() => {\n                  trashEvent()\n                  setShow(false)\n              }}\n            >\n\n               <img src={trashimg} alt='trash' style={{ marginRight: '3px' }} \n               />\n               {text}\n            </button>\n          }\n          {\n            reset &&\n            \n            <button \n\n              className='buttonStyling flexAlignCenter outline-none p-1 '\n              onClick={() => {}\n                }\n            >\n\n              <img src={resetimg} alt='reset' style={{ marginRight: '3px', width: '23px', height: '23px'}}  \n              />\n              {text}\n\n            </button>\n          }\n        </div>\n      }\n    </div>   \n    }\n    </>\n  );\n}\n\nexport default  withRouter(ThreeDotsBtn)","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js",["151","152","153"],"import React, { useRef, useEffect } from \"react\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nexport default function useOutsideAlerter(ref,editName, cb,cb2) {\n\n    \n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if ( (ref[0].current && !ref[0].current.contains(event.target)) ) {\n                if(editName){\n                    cb()\n                    // ()=>{setShow(false)}\n                }else{\n                    if(ref[1].current && !ref[1].current.contains(event.target)){\n                        cb2()\n                    }else{\n                        \n                    }\n                    \n                    // ()=>{setStartAnimation(true)}\n\n                }\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref,editName]);\n}","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js",["154","155"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/HourlyBreakdown.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CreateNewDeck.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CutWord.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/SaveAndDiscard.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/RepeatBtn.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagramm.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddQuestionsToDeck.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardname.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/QuestAnswerTrainOverv.js",["156","157","158"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Button, FormControl } from 'react-bootstrap'\nimport ThreeDotsBtn from './ThreeDotsBtn';\nimport { Context } from '../../Context'\nimport BasicOrangeWindow from './BasicOrangeWindow'\nimport DeleteCardQuestionBox from './DeleteCardQuestionBox'\nimport SaveAndDiscard from './CardBodyParts/SaveAndDiscard'\nimport RepeatBtn from './CardBodyParts/RepeatBtn'\n\n\nexport default function QuestAnswerTrainOverv({name, data, closePopup,index,paused }) {\n  \n  \n  const [checked, setChecked] = useState(false)\n  const [edit, setEdit] = useState(false);\n  const [random, setRandom] = useState(null);\n  \n  const [show, setShow] = useState(false);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [showRepeat, setShowRepeat] = useState(false);\n  \n  const [showDeleteFrame, setShowDeleteFrame] = useState(true)\n  const [pauseIsActive, setPauseIsActive] = useState(true)\n  const [timer, setTimer] = useState(null)\n  \n  const [trash, setTrash] = useState(false);\n  const [openDeck, setOpenDeck] = useState(true)\n  \n  \n  const { dataBase, setDataBase } = useContext(Context);\n\n  function handlePause () {\n    let newDataBase = {...dataBase}\n    let savePausedState = !pauseIsActive\n    setPauseIsActive(savePausedState)\n    dataBase.DeckNames[index].paused = !dataBase.DeckNames[index].paused\n    setDataBase(newDataBase)\n    \n  }\n\n\n\n  function generateRandom() {                                                                                                                                                                                                                                                                                                                                                                         \n    let random = null\n    if (dataBase.queue[0] && dataBase.queue[0].timeLeft === 0) {\n      //need to have algorithm to filter s in queue related onlz for this deck\n      //also not tot forget add decremental time algorith for all crads no matter waht deck\n\n\n      random = dataBase.queue.shift().index\n    } else {\n      random = Math.floor(Math.random() * data.length);\n    }\n\n    setRandom(random);\n    setShow(true)\n    closePopup()\n    console.log(data)\n \n\n     if (data.length === 0) {\n\n\n      alert('add questions to deck')\n      setOpenDeck(false)\n    }\n  }\n\n  function addToQueue(time) {\n    let newDataBase = { ...dataBase }\n    newDataBase.queue.push({\n      ...data[random],\n      index: random,\n      timeLeft: time * 1000,\n      item: name\n    })\n    setDataBase(newDataBase)\n  }\n\n\n  useEffect(() => {\n\n    if (show) {\n      let timeLeft = setInterval(() => {\n\n        // dataBase.queue.forEach((item, index) => {\n        //   if (dataBase.queue[index].timeLeft >= 1000) {\n        //     dataBase.queue[index].timeLeft -= 1000\n        //   } else {\n        //     dataBase.queue[index].timeLeft = 0\n        //   }\n        console.log(name, timeLeft)\n        //     // })\n      }, 1000)\n      // })\n      //everything  here will be returned when components unmounts\n      setTimer(timeLeft)\n    } else {\n      console.log(timer)\n      clearInterval(timer)\n\n      console.log('oh you delete me')\n    }\n    //return function () {clearInterval(timeLeft)}\n  }, [show])\n\n\n  function deleteCurrentCard() {\n    let newDataBase = { ...dataBase }\n    newDataBase.DeckNames[index].data.splice(random, 1)\n    setDataBase(newDataBase)\n    generateRandom()  \n  }\n\n  function changeHandler(e) {\n    let { name: input, value } = e.target;\n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[name].data[random][input] = value;\n    setDataBase(newDataBase)\n  }\n\n\n  return (\n    <>\n    \n      <Button \n       variant='secondary'\n       className= {'openDeck'}\n       size='sm'\n       style= {{\n                opacity: dataBase.DeckNames[index].paused? '0': '1',\n                cursor:  dataBase.DeckNames[index].paused? 'default': 'pointer'\n              }}\n        onClick={\n          paused\n          ?\n            null\n          :\n            generateRandom\n        }     \n      >\n      Open Deck\n      </Button>\n    \n      {\n        openDeck && !dataBase.DeckNames[index].paused &&\n\n        <BasicOrangeWindow \n          show={show}\n          showRepeat={showRepeat}\n          setShowRepeat={setShowRepeat}\n          setShow={setShow}\n          setShowAnswer = {setShowAnswer}\n          setEdit={setEdit}\n          title={`Deck: ${name}`}\n          menu={<ThreeDotsBtn\n           \n                   text={'card'}\n                   editName={true}\n                   className='threeDotsInQuestionAnswerStyling'\n                   threeDotsContainer = {{position: 'default'}}\n                   index={index}\n                   edit pause trash\n          \n                   editEvent={() => {\n                      setShowAnswer(true)\n                      setEdit(true)       \n                    }}\n\n                    pauseEvent={() => {\n                            // handlePause()\n                    }}   \n\n                    trashEvent={() => {\n\n                      setTrash(true)\n\n                    dataBase.checkboxClicked?\n                      deleteCurrentCard() : setShowDeleteFrame(true)\n\n                    }}\n                 />}\n          >\n          {\n            data[random]\n            &&\n            <>\n              <div className='mb-4'>\n                <p className='questionAnswerStyling'>Question</p>\n                <FormControl\n                  as=\"textarea\"\n                  aria-label=\"With textarea\"\n                  value={data[random].question} className='w-100'\n                  disabled={!edit}\n                  name='question'\n                  onChange={changeHandler}\n                />\n              </div>\n              {\n                !showAnswer\n                &&\n                <Button\n                  style={{ width: '40%' }}\n                  class='p-1'\n                  variant='secondary'\n                  onClick={() => {\n                    setShowAnswer(true)\n                    setShowRepeat(true)\n                  }}\n                  className='showAnswer my-5'\n                >\n                  Show answer\n                </Button>\n              }\n              {\n                showRepeat\n                &&\n                <div className=\"d-flex justify-content-between px-3\">\n\n                  {dataBase.userTimePreferences.map((col, k) =>\n                    <RepeatBtn\n                      btn={col.name}\n                      onClick={() => {\n                        setShowAnswer(!showAnswer)\n                        setShowRepeat(false)\n                      }}\n                      label={'<' + col.amount + col.unit}\n                    />\n                  )}\n                </div>\n              }\n              {\n                showAnswer\n                &&\n                <div className='mt-4'>\n                  <p className='questionAnswerStyling'>Answer</p>\n                  <FormControl\n                    as=\"textarea\"\n                    aria-label=\"With textarea\"\n                    value={data[random].answer}\n                    className='w-100'\n                    disabled={!edit}\n                    name='answer'\n                    onChange={changeHandler}\n                  />\n                </div>\n              }\n              {\n                edit && \n\n                <div className='d-flex justify-content-center'>\n                    <SaveAndDiscard \n                        editEvent={() => {\n                            setShowAnswer(false)\n                            setEdit(false)\n                        }}                       \n                    />\n                </div>\n              }\n              {\n                trash && showDeleteFrame &&\n\n                <DeleteCardQuestionBox\n                  card='card'\n                  checked = {checked}\n                  setChecked = {setChecked}\n                  show={show}\n                  deleteFrame={() => setShowDeleteFrame(false)}\n                  trashEvent={deleteCurrentCard}\n                  onHide={()=>{\n                    setShowAnswer(false)\n                    setShowRepeat(false)\n                  }}      \n                />\n              }\n            </>\n          }\n        </BasicOrangeWindow>\n      }\n    </>\n  )\n}\n\n\n\n\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/LandingPage.js",["159","160"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/MenuContainer.js",["161"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/BasicOrangeWindow.js",[],{"ruleId":"162","severity":1,"message":"163","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":12},{"ruleId":"162","severity":1,"message":"166","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":16},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"162","severity":1,"message":"171","line":16,"column":16,"nodeType":"164","messageId":"165","endLine":16,"endColumn":23},{"ruleId":"162","severity":1,"message":"172","line":160,"column":15,"nodeType":"164","messageId":"165","endLine":160,"endColumn":25},{"ruleId":"162","severity":1,"message":"173","line":32,"column":7,"nodeType":"164","messageId":"165","endLine":32,"endColumn":13},{"ruleId":"162","severity":1,"message":"174","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"175","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":37,"column":8,"nodeType":"178","endLine":37,"endColumn":22,"suggestions":"179"},{"ruleId":"162","severity":1,"message":"180","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":24},{"ruleId":"176","severity":1,"message":"181","line":13,"column":5,"nodeType":"178","endLine":13,"endColumn":7,"suggestions":"182"},{"ruleId":"162","severity":1,"message":"183","line":29,"column":12,"nodeType":"164","messageId":"165","endLine":29,"endColumn":23},{"ruleId":"162","severity":1,"message":"184","line":66,"column":12,"nodeType":"164","messageId":"165","endLine":66,"endColumn":22},{"ruleId":"176","severity":1,"message":"185","line":102,"column":6,"nodeType":"178","endLine":102,"endColumn":12,"suggestions":"186"},{"ruleId":"176","severity":1,"message":"187","line":45,"column":6,"nodeType":"178","endLine":45,"endColumn":30,"suggestions":"188"},{"ruleId":"176","severity":1,"message":"189","line":45,"column":7,"nodeType":"190","endLine":45,"endColumn":29},{"ruleId":"162","severity":1,"message":"191","line":14,"column":20,"nodeType":"164","messageId":"165","endLine":14,"endColumn":31},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-native-reassign",["192"],"no-negated-in-lhs",["193"],"'setShow' is assigned a value but never used.","'setNewYear' is assigned a value but never used.","'colors' is assigned a value but never used.","'React' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cb' and 'cb2'. Either include them or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["194"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'inputDom.value'. Either include it or remove the dependency array.",["195"],"'handlePause' is defined but never used.","'addToQueue' is defined but never used.","React Hook useEffect has missing dependencies: 'name' and 'timer'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'dataBase'. Either include it or remove the dependency array.",["197"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","'setDataBase' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [ref, editName, cb, cb2]",{"range":"206","text":"207"},"Update the dependencies array to be: [inputDom.value]",{"range":"208","text":"209"},"Update the dependencies array to be: [name, show, timer]",{"range":"210","text":"211"},"Update the dependencies array to be: [dataBase]",{"range":"212","text":"213"},[1103,1117],"[ref, editName, cb, cb2]",[265,267],"[inputDom.value]",[3244,3250],"[name, show, timer]",[1287,1311],"[dataBase]"]