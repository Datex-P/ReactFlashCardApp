[{"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js":"1","/Users/fab/Downloads/reactapp/flashcardreact/src/App.js":"2","/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js":"3","/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx":"4","/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx":"5","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js":"6","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js":"7","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/DeckContainer.js":"8","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js":"9","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js":"10","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Menu.js":"11","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js":"12","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js":"13","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js":"14","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddNewDeck.js":"15","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBody.js":"16","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js":"17","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js":"18","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js":"19","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js":"20","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardHeader.js":"21","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js":"22","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/StyledModal.js":"23","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js":"24","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/ChartComp.js":"25","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js":"26","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js":"27","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js":"28","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js":"29","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Testfile.js":"30"},{"size":511,"mtime":1608033487654,"results":"31","hashOfConfig":"32"},{"size":776,"mtime":1608039712942,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1608015684888,"results":"34","hashOfConfig":"32"},{"size":1070,"mtime":1608044007107,"results":"35","hashOfConfig":"32"},{"size":1070,"mtime":1608044007107,"results":"36","hashOfConfig":"32"},{"size":770,"mtime":1610993741660,"results":"37","hashOfConfig":"38"},{"size":664,"mtime":1610701575119,"results":"39","hashOfConfig":"38"},{"size":5662,"mtime":1610908805254,"results":"40","hashOfConfig":"38"},{"size":193,"mtime":1610622761738,"results":"41","hashOfConfig":"38"},{"size":7472,"mtime":1610902005284,"results":"42","hashOfConfig":"38"},{"size":2189,"mtime":1610718247969,"results":"43","hashOfConfig":"38"},{"size":390,"mtime":1610804429745,"results":"44","hashOfConfig":"38"},{"size":1989,"mtime":1610974750562,"results":"45","hashOfConfig":"38"},{"size":2360,"mtime":1610713669513,"results":"46","hashOfConfig":"38"},{"size":2499,"mtime":1610907888204,"results":"47","hashOfConfig":"38"},{"size":7977,"mtime":1610984855246,"results":"48","hashOfConfig":"38"},{"size":702,"mtime":1609849186665,"results":"49","hashOfConfig":"38"},{"size":290,"mtime":1609859876733,"results":"50","hashOfConfig":"38"},{"size":181,"mtime":1609860000402,"results":"51","hashOfConfig":"38"},{"size":2014,"mtime":1610994504728,"results":"52","hashOfConfig":"38"},{"size":640,"mtime":1610437242307,"results":"53","hashOfConfig":"38"},{"size":1707,"mtime":1610306068828,"results":"54","hashOfConfig":"38"},{"size":950,"mtime":1610817861116,"results":"55","hashOfConfig":"38"},{"size":6274,"mtime":1610998206677,"results":"56","hashOfConfig":"38"},{"size":2524,"mtime":1610615882427,"results":"57","hashOfConfig":"38"},{"size":366,"mtime":1610617679230,"results":"58","hashOfConfig":"38"},{"size":535,"mtime":1610617895840,"results":"59","hashOfConfig":"38"},{"size":7376,"mtime":1610985309786,"results":"60","hashOfConfig":"38"},{"size":2597,"mtime":1610901871365,"results":"61","hashOfConfig":"38"},{"size":179,"mtime":1610992494362,"results":"62","hashOfConfig":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s5fd1k",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gggxqh",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/App.js",["127"],"/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx",["128"],"/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js",[],["129","130"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/DeckContainer.js",["131","132"],"import React, {\n  useEffect,\n  useState,\n  useContext\n} from 'react';\nimport Deck from './deck/';\nimport { Container, Row } from 'react-bootstrap'\n// import EffectTest from '../EffectTest.js';\nimport { Context } from '../Context'//step 4.1 import context instance\n\nexport default function DeckContainer() {\n  const [loading, setLoading] = useState(true)\n  //const { dataBase,styles } = useContext(Context);// step 4.2 destructure context value\n  const { dataBase,setDataBase, styles } = useContext(Context)\n\n\n\n  useEffect(()=>{\n    setTimeout(()=>{setLoading(false)},2000)\n  },[])\n  let colors = ['#ffcdb2', '#ffb4a2', '#e5989b', '#b5838d', '#6d6875'];\n\n  const [active, setActive] = useState(null)\n  const [showDeck, setShowDeck] = useState(true)\n  \n\n  const [createNewDeckDisplay, setCreateNewDeckDisplay] = useState(false)\n\n  useEffect(() => {\n    setActive(dataBase && (Object.keys(dataBase.DeckNames).length - 1))\n\n  }, [dataBase])\n\n  return (\n    dataBase\n      ?\n\n      <Container  className= 'align-items-center' style={{backgroundColor: styles.backgroundColor[dataBase.userPreferences.backgroundColor], borderBottomLeftRadius: '5px', borderBottomRightRadius: '5px', height: '650px', width: '504px'}} >\n\n        <Row\n        //  style={{ height: '500px'}} \n        // className=\"justify-content-center\"\n        >\n          {showDeck &&\n            <div style={{ position: 'relative', padding: '50px', width: '400px', marginTop: '60px' }}>\n\n              <div >\n                {\n\n\n                  Object.keys(dataBase.DeckNames).map((deck, index, array) =>\n                    <Deck\n                      deck={dataBase.DeckNames[deck]}\n                      name={active === index ? deck : ''}\n                      backgroundColor={colors[index % 5]}\n                      transform={active === index ? `rotate(0deg)` : `rotate(${(array.length - 1 - index) * -2}deg)`}\n                      zIndex={active === index ? 2 : 0}\n                      active={active === index}\n                    // style= {{height: '2000px'}} tried to find out where to change height of container\n                    />\n                  )\n                }\n              </div>\n              <div\n                style={{ height: '220px', width: '390px', overflow: 'scroll', overflowX: 'hidden', position: 'absolute', top: '65px' }}\n                onScroll={(event) => {\n\n                  let step = (1000 - 220) / (Object.keys(dataBase.DeckNames).length - 1)\n                  let index = Math.floor(event.target.scrollTop / step)\n                  setActive(index)\n                  console.log(index)\n                }}\n              >\n\n                <div\n                  style={{ height: '1000px', position: 'absolute', top: '0px', width: '100%' }}\n\n                ></div>\n\n              </div>\n            </div>\n          }\n        </Row>\n\n        <Row className=\"justify-content-center\"\n        >\n          <button\n            onClick={() => {\n              \n              setCreateNewDeckDisplay(true)\n              setShowDeck(false)\n            }}\n            style={{zIndex: '4', marginTop: '400px', width: '200px'}} className='generalButtonStyling'\n          >\n            Create Deck\n          </button>\n\n          <CreateNewDeck close={()=>{setCreateNewDeckDisplay(false);setShowDeck(true)}} createNewDeckDisplay={createNewDeckDisplay} style={{ position: 'absolute', zIndex: '40' }} />\n\n        </Row>\n\n      </Container>\n      :\n       'empty'\n      //  <Spinner loading={loading}/>\n  )\n}\n\n\nexport function CreateNewDeck({ createNewDeckDisplay, close,style }) {\n  const { dataBase,setDataBase } = useContext(Context)\n  const [inputField, setInputField] = useState('')\n\n  function addNewDeckName(){\n    \n    let newDataBase = {...dataBase}\n    \n    \n    if (inputField in newDataBase.DeckNames)\n      // Object.keys(newDataBase.DeckNames).includes(inputField)) \n      {\n          \n      alert('Name of Deck already exists')\n      setInputField('')\n\n\n    } else if (!inputField) {\n      alert('Input needed')\n    } else {\n      newDataBase.DeckNames[inputField]={\n        data: [],\n        toStudyGoal: 20,\n        cardsToday: 0\n      }\n      setDataBase(newDataBase)\n      close()\n    }\n  }\n\n  \n\n  return (\n    <>\n      {\n        createNewDeckDisplay &&\n        <div className='createNewDeck d-flex flex-column justify-content-center align-items-center ' style={style}>\n\n          <div style={{ fontWeight: 'bold' }}>Name for new deck</div>\n\n          <input style={{ width: '70%', marginTop: '10px', marginBottom: '10px', height: '30px', outline: 'none' }}\n          onChange={event => setInputField(event.target.value)}\n          \n          ></input>\n\n          <select style={{ width: '70%', outline: 'none' }}>\n            <option>option 1</option>\n            <option>option 2</option>\n            <option>option 3</option>\n            <option>option 4</option>\n            <option>option 5</option>\n          </select>\n\n          <div className='d-flex justify-content-between' style={{ width: '47%' }}>\n            {['Cancel', 'Ok'].map((el) =>\n              <button \n                className='generalButtonStyling'\n                style={{ cursor: 'pointer', marginTop: '10px', width: '63px', height: '26px', borderRadius: '5px'}}\n                onClick={() => {\n                  el === 'Cancel' ?\n                      close()             \n                    :\n                    // alert('smth removeEventListener')\n                    addNewDeckName()\n\n                }\n              }\n              >\n                {el}\n              </button>\n            )\n            }\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Menu.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddNewDeck.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBody.js",["133","134"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Button, FormControl } from 'react-bootstrap'\nimport ThreeDotsBtn from './ThreeDotsBtn';\nimport { Context } from '../../Context'\nimport StyledModal from './StyledModal'\nimport DeleteCardQuestionBox from './DeleteCardQuestionBox'\n\n\nexport default function CardBody({ name, data, closePopup }) {\n  const [show, setShow] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [random, setRandom] = useState(null);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [trash, setTrash] = useState(false);\n  const [showRepeat, setShowRepeat] = useState(false);\n  const [showDeleteFrame, setShowDeleteFrame] = useState(true)\n  const { dataBase, setDataBase } = useContext(Context);\n  const [timer, setTimer] = useState(null)\n  const [openDeck, setOpenDeck] = useState(true)\n\n\n  function generateRandom() {\n    let random = null\n    if (dataBase.queue[0] && dataBase.queue[0].timeLeft === 0) {\n      //need to have algorithm to filter cards in queue related onlz for this deck\n      //also not tot forget add decremental time algorith for all crads no matter waht deck\n\n\n      random = dataBase.queue.shift().index\n    } else {\n      random = Math.floor(Math.random() * data.length);\n    }\n\n    setRandom(random);\n    setShow(true)\n    closePopup()\n    console.log(data)\n \n\n    if (dataBase.DeckNames[name].data.length === 0) {\n\n      alert('add questions to deck')\n      setOpenDeck(false)\n    }\n\n\n\n\n  }\n\n  function addToQueue(time) {\n    let newDataBase = { ...dataBase }\n    newDataBase.queue.push({\n      ...data[random],\n      index: random,\n      timeLeft: time * 1000,\n      item: name\n    })\n    setDataBase(newDataBase)\n  }\n\n\n  useEffect(() => {\n\n\n    if (show) {\n      let timeLeft = setInterval(() => {\n\n        // dataBase.queue.forEach((item, index) => {\n        //   if (dataBase.queue[index].timeLeft >= 1000) {\n        //     dataBase.queue[index].timeLeft -= 1000\n        //   } else {\n        //     dataBase.queue[index].timeLeft = 0\n        //   }\n        console.log(name, timeLeft)\n        //     // })\n      }, 1000)\n      // })\n      //everything  here will be returned when components unmounts\n      setTimer(timeLeft)\n    } else {\n      console.log(timer)\n      clearInterval(timer)\n\n      console.log('oh you delete me')\n    }\n    //return function () {clearInterval(timeLeft)}\n  }, [show])\n\n\n\n\n  function deleteCurrentCard() {\n    let newDataBase = { ...dataBase }\n    //console.log(newDataBase.DeckNames.data[random])\n\n    newDataBase.DeckNames[name].data.splice(random, 1)\n    setDataBase(newDataBase)\n    generateRandom()\n    \n  }\n\n  function changeHandler(e) {\n    let { name: input, value } = e.target;\n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[name].data[random][input] = value;\n    setDataBase(newDataBase)\n  }\n\n\n  return (\n    <>\n\n\n      <Button\n        variant='secondary'\n        className='openDeck'\n        size='sm'\n        onClick={generateRandom}\n      >Open Deck</Button>\n\n\n      {openDeck &&\n        <StyledModal\n          show={show}\n          setShow={setShow}\n          title={`Deck: ${name}`}\n          // contentClassName={'positioning'}\n          menu={<ThreeDotsBtn\n            text={'card'}\n            editEvent={() => {\n              setShowAnswer(true)\n              setEdit(true)\n              // setShowRepeat(false)\n\n            }}\n            // onHide={setShowRepeat(true)}\n            trashEvent={() => {\n              // setShowAnswer(true)\n              setTrash(true)\n              // setShowRepeat(false)\n              setShowDeleteFrame(true)\n\n\n            }}\n            style={{\n              position: 'absolute', top: '-14px', left: '53px', zIndex: '2000', backgroundColor: 'white',\n              border: '1px solid black', overflow: 'hidden'\n            }}\n            //database.DeckNames[name]\n            edit pause trash\n\n          />}\n        >\n          {\n            data[random]\n            &&\n            <>\n              <div className='mb-4'>\n                <p className='questionAnswerStyling'>Question</p>\n                <FormControl\n                  as=\"textarea\"\n                  aria-label=\"With textarea\"\n                  value={data[random].question} className='w-100'\n                  disabled={!edit}\n                  name='question'\n                  onChange={changeHandler}\n                />\n              </div>\n              {\n                !showAnswer\n                &&\n                <Button\n                  style={{ width: '40%' }}\n                  class='p-1'\n                  variant='secondary'\n                  onClick={() => {\n                    setShowAnswer(true)\n                    setShowRepeat(true)\n                  }}\n                  className='showAnswer my-5'\n                >\n                  Show answer\n                </Button>\n              }\n              {\n                showRepeat\n                &&\n                <div className=\"d-flex justify-content-between px-3\">\n\n                  {dataBase.userTimePreferences.map((col, k) =>\n                    <RepeatBtn\n                      btn={col.name}\n                      onClick={() => {\n                        setShowAnswer(!showAnswer)\n                        setShowRepeat(false)\n                      }}\n                      label={'<' + col.amount + col.unit}\n                    />\n                  )}\n\n\n                </div>\n              }\n              {\n                showAnswer\n                &&\n                <div className='mt-4'>\n                  <p className='questionAnswerStyling'>Answer</p>\n                  <FormControl\n                    as=\"textarea\"\n                    aria-label=\"With textarea\"\n                    value={data[random].answer}\n                    className='w-100'\n                    disabled={!edit}\n                    name='answer'\n                    onChange={changeHandler}\n                  />\n                </div>\n              }\n\n              {\n                edit\n                && <div className='d-flex justify-content-center'>\n                  <SaveAndDiscard editEvent={() => {\n                    setShowAnswer(false)\n                    setEdit(false)\n                  }} />\n                </div>\n              }\n              {\n                trash && showDeleteFrame &&\n                <DeleteCardQuestionBox\n                  card='card'\n                   show={show}\n                  deleteFrame={() => setShowDeleteFrame(false)}\n                  trashEvent={deleteCurrentCard}\n                  onHide={()=>{\n                    setShowAnswer(false)\n                    setShowRepeat(false)\n                  }}\n                    \n              //         setShowAnswer(true)\n              // // setTrash(true)\n              // // setShowRepeat(false)\n              // //  setShowDeleteFrame(false)\n                    \n              //       }}\n                  // onHide={()=>setShowAnswer(true)}\n\n                />\n\n              }\n            </>\n          }\n        </StyledModal>\n      }\n    </>\n  )\n}\n\n\nfunction RepeatBtn({ label, btn, onClick }) {\n  return (\n    <div className='text-center'>\n      <div className='font-weight-bold'>{label}</div>\n      <Button variant=\"secondary\"\n        onClick={onClick}\n      >{btn}</Button>\n    </div>\n  )\n}\n\n\nfunction SaveAndDiscard({ editEvent }) {\n\n  return (\n    <div className='saveAndDiscardContainer d-flex justify-content-around align-items-center'>\n\n      {\n        ['Discard', 'Save'].map(el =>\n          <div\n            style={{\n              fontSize: '14px',\n              width: '63px',\n              height: '24px',\n              backgroundColor: el === 'Save' ? '#2d6a4f' : '#772e25'\n            }}\n            className='generalButtonStyling d-flex justify-content-around align-items-center'\n            onClick={editEvent}\n          >\n            {el}\n          </div>\n        )\n      }\n\n    </div>\n  )\n\n}\n\n\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js",["135","136","137"],"import React, { useRef, useEffect } from \"react\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nexport default function useOutsideAlerter(ref,cb) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                cb()\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardHeader.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/StyledModal.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/ChartComp.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js",["138","139"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Testfile.js",[],{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":12},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"140","severity":1,"message":"149","line":12,"column":10,"nodeType":"142","messageId":"143","endLine":12,"endColumn":17},{"ruleId":"140","severity":1,"message":"150","line":14,"column":20,"nodeType":"142","messageId":"143","endLine":14,"endColumn":31},{"ruleId":"140","severity":1,"message":"151","line":51,"column":12,"nodeType":"142","messageId":"143","endLine":51,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":88,"column":6,"nodeType":"154","endLine":88,"endColumn":12,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"156","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"157","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":23},{"ruleId":"152","severity":1,"message":"158","line":23,"column":8,"nodeType":"154","endLine":23,"endColumn":13,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"160","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"161","line":13,"column":5,"nodeType":"154","endLine":13,"endColumn":7,"suggestions":"162"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"'loading' is assigned a value but never used.","'setDataBase' is assigned a value but never used.","'addToQueue' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'timer'. Either include them or remove the dependency array.","ArrayExpression",["165"],"'React' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'inputDom.value'. Either include it or remove the dependency array.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [name, show, timer]",{"range":"174","text":"175"},"Update the dependencies array to be: [cb, ref]",{"range":"176","text":"177"},"Update the dependencies array to be: [inputDom.value]",{"range":"178","text":"179"},[2399,2405],"[name, show, timer]",[693,698],"[cb, ref]",[265,267],"[inputDom.value]"]