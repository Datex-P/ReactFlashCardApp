[{"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js":"1","/Users/fab/Downloads/reactapp/flashcardreact/src/App.js":"2","/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js":"3","/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx":"4","/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx":"5","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js":"6","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js":"7","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js":"8","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js":"9","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js":"10","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js":"11","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js":"12","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js":"13","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js":"14","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js":"15","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js":"16","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js":"17","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js":"18","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js":"19","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js":"20","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js":"21","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js":"22","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/HourlyBreakdown.js":"23","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CreateNewDeck.js":"24","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CutWord.js":"25","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/SaveAndDiscard.js":"26","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/RepeatBtn.js":"27","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagramm.js":"28","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddQuestionsToDeck.js":"29","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardname.js":"30","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/QuestAnswerTrainOverv.js":"31","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/LandingPage.js":"32","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/MenuContainer.js":"33","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/BasicOrangeWindow.js":"34","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Hexagons.js":"35","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/RepetitionIntervalFields.js":"36","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/SomeTest.js":"37","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardName.js":"38"},{"size":511,"mtime":1608033487654,"results":"39","hashOfConfig":"40"},{"size":776,"mtime":1608039712942,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1608015684888,"results":"42","hashOfConfig":"40"},{"size":1070,"mtime":1608044007107,"results":"43","hashOfConfig":"40"},{"size":1070,"mtime":1608044007107,"results":"44","hashOfConfig":"40"},{"size":637,"mtime":1613718784022,"results":"45","hashOfConfig":"46"},{"size":654,"mtime":1613718770641,"results":"47","hashOfConfig":"46"},{"size":218,"mtime":1612788832144,"results":"48","hashOfConfig":"46"},{"size":4989,"mtime":1614435914670,"results":"49","hashOfConfig":"46"},{"size":687,"mtime":1614418903821,"results":"50","hashOfConfig":"46"},{"size":10045,"mtime":1614435493924,"results":"51","hashOfConfig":"46"},{"size":6404,"mtime":1614436010313,"results":"52","hashOfConfig":"46"},{"size":1167,"mtime":1613374262077,"results":"53","hashOfConfig":"46"},{"size":290,"mtime":1609859876733,"results":"54","hashOfConfig":"46"},{"size":181,"mtime":1609860000402,"results":"55","hashOfConfig":"46"},{"size":2332,"mtime":1613670856191,"results":"56","hashOfConfig":"46"},{"size":1707,"mtime":1610306068828,"results":"57","hashOfConfig":"46"},{"size":5546,"mtime":1614413416163,"results":"58","hashOfConfig":"46"},{"size":366,"mtime":1610617679230,"results":"59","hashOfConfig":"46"},{"size":535,"mtime":1610617895840,"results":"60","hashOfConfig":"46"},{"size":5309,"mtime":1614410586190,"results":"61","hashOfConfig":"46"},{"size":3844,"mtime":1613632781640,"results":"62","hashOfConfig":"46"},{"size":1208,"mtime":1612950823398,"results":"63","hashOfConfig":"46"},{"size":4157,"mtime":1614414354510,"results":"64","hashOfConfig":"46"},{"size":184,"mtime":1612525158894,"results":"65","hashOfConfig":"46"},{"size":869,"mtime":1613209679477,"results":"66","hashOfConfig":"46"},{"size":374,"mtime":1612956547464,"results":"67","hashOfConfig":"46"},{"size":2557,"mtime":1612950444399,"results":"68","hashOfConfig":"46"},{"size":4684,"mtime":1614413895624,"results":"69","hashOfConfig":"46"},{"size":1377,"mtime":1613223098309,"results":"70","hashOfConfig":"46"},{"size":11246,"mtime":1614265433404,"results":"71","hashOfConfig":"46"},{"size":7915,"mtime":1614435408681,"results":"72","hashOfConfig":"46"},{"size":4257,"mtime":1614418849214,"results":"73","hashOfConfig":"46"},{"size":2085,"mtime":1614414179625,"results":"74","hashOfConfig":"46"},{"size":2370,"mtime":1614418986231,"results":"75","hashOfConfig":"46"},{"size":2729,"mtime":1614411908593,"results":"76","hashOfConfig":"46"},{"size":717,"mtime":1613149642744,"results":"77","hashOfConfig":"46"},{"size":1491,"mtime":1614265267952,"results":"78","hashOfConfig":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s5fd1k",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"gggxqh",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/App.js",["160"],"/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx",["161"],"/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js",[],["162","163"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js",["164"],"import React, {useState,useContext,useRef,useEffect} from 'react'\nimport { Card} from 'react-bootstrap'\nimport {Context} from '../../Context'\nimport '../styles.css'\n\nimport ThreeDotsBtn from './ThreeDotsBtn'\nimport AddQuestionsToDeck from './AddQuestionsToDeck'\nimport QuestAnswerTrainOverv from './QuestAnswerTrainOverv'\nimport DeckOrCardName from  './DeckOrCardName'\nimport DeleteCardQuestionBox from  './DeleteCardQuestionBox';\n\nimport playimg from '../../icons/play.svg'\n\n\n\n\nexport default function Deck({ deck, checked, setChecked,\n                               active, setActive, title, bg, \n                              pauseIsActive, setPauseIsActive, trigger, \n                              changeDeckName,\n                              setChangeDeckNameOpen,\n                              ...style }) {\n     \n    \n  let { data, paused, name }  = deck\n  \n  const [editButtonClicked, setEditButtonClicked] = useState(true); \n  const [nameOfTopDeck, setNameOfTopDeck] = useState(name);\n  const [threeDotsMenuOpen, setThreeDotsMenuOpen] = useState(false);\n  \n  const [showDeleteWindow, setShowDeleteWindow] = useState(true);\n  const [trash, setTrash] = useState(false);\n  const { dataBase, setDataBase} = useContext(Context)\n  const [index, setIndex] = useState(0);\n\n  useEffect(()=>{\n    let cIndex = dataBase.DeckNames.findIndex(item=>item.name === name)\n    setIndex(cIndex)\n    //console.log(cIndex)\n    // eslint-disable-next-line \n  },[trigger])\n\n  useEffect(()=>{\n    setChangeDeckNameOpen(!editButtonClicked)\n  },[editButtonClicked])\n  \n  let colors = ['#ffcdb2', '#ffb4a2', '#e5989b', '#b5838d', '#6d6875'];\n  \n  let input  = useRef(null)\n\n  function handlePause () {\n    console.log(index)\n    let newDataBase = {...dataBase}\n  \n    newDataBase.DeckNames[index].paused = !paused;\n    console.log(newDataBase.DeckNames)\n    setDataBase(newDataBase)    \n    // setShow(false) why does  three button window not close with this?\n  }\n\n  \n  useEffect(()=>{\n    setNameOfTopDeck(name)\n    console.log(name)\n  },[name])\n\n  function deleteDeck(){\n    let newDataBase = {...dataBase}\n    newDataBase.DeckNames.splice(index,1);\n    setDataBase(newDataBase)\n  }\n\n \n  function handleActive(i){\n    setActive(i)\n    let newDataBase = {...dataBase}\n    newDataBase.active = i\n    setDataBase(newDataBase)\n  }\n\n  \n  return (\n\n    <Card \n        style={style} \n        className='newDeckContainer flexColumn position-absolute '\n    >\n      <Card.Body \n          className='justify-content-center align-items-center flex-column d-flex'\n      >\n\n        <Card.Title \n            className='d-flex align-items-center justify-content-between position-relative'\n            style={{width:'151px', left: '3px'}}\n        >\n\n        {\n         editButtonClicked?\n\n            <DeckOrCardName \n                bg={style.background}\n                index={index}\n                paused={paused}\n                data={data}\n                name= {name}\n                active={active}\n                setActive={setActive}\n                className='deckOrCardNameStyling'\n            />\n\n               :\n        \n            <input \n                  ref = {input} \n                  // changeDeckNameOpen={true}\n                  className= 'addToDeckInput'\n                  style={{top: data.length === 0? '-69px': 'default'}}\n                  value = {nameOfTopDeck}\n                  onChange={(e)=>{\n                \n                        if (e.target.value.length>25) {\n                        \n                          alert('Deckname can not be longer than 25 characters')\n                        } else {\n\n                          // if (!dataBase.DeckNames[index].paused) {\n                        \n                            setNameOfTopDeck(e.target.value)}\n                            // }\n\n                        }\n                    }\n            />\n\n         }\n\n        \n\n          <ThreeDotsBtn\n              name={name}\n              text={'deck'}\n              data={data}\n              showFromParent={threeDotsMenuOpen}\n              editButtonClicked={editButtonClicked}\n              setEditButtonClicked={setEditButtonClicked}\n              setShowFromParent={setThreeDotsMenuOpen}\n              index={index}\n              paused={paused}\n              bg={style.background} \n              nameOfTopDeck={nameOfTopDeck}\n              setNameOfTopDeck={setNameOfTopDeck}\n              edit={!paused} \n              pause \n              trash={!paused}\n              input={input}\n              threeDotsContainer= {{position: 'fixed', right: '50px', top: '18px'}}\n              className='threeDotsBtnIndex'\n              style= {{border: paused? 'none': '1px solid black',\n                      backgroundColor: paused? 'black': 'white'\n                      }}\n       \n              editEvent={() => {\n                setThreeDotsMenuOpen(false)\n                setEditButtonClicked(!editButtonClicked)\n              }}\n\n              trashEvent={\n                dataBase.checkboxClicked\n                    ?\n                    () => {\n                      deleteDeck()\n                      handleActive(index-1)\n                    }\n                    :\n                    () => {\n                      setTrash(true)\n                      setShowDeleteWindow(true)\n                    }\n              }\n            />\n          \n\n            {\n              trash && showDeleteWindow && !paused &&\n\n                <DeleteCardQuestionBox\n                  card='deck'\n                  threeDotsMenuOpen={threeDotsMenuOpen}\n                  deleteWindow={() => setShowDeleteWindow(false)}\n                  trashEvent={()=>{\n\n                  deleteDeck()\n                  handleActive(index-1)}\n                  }\n                  showDeleteWindow={showDeleteWindow}\n                />\n            }\n\n        </Card.Title>\n\n        <div className='mb-3'>\n\n           {\n            data.length === 0?\n              \n\n            <div \n                  className='deckPausedContainer'\n                  style={{left: '84px', textAlign: 'center'}}\n              >\n\n               \n\n                  <div \n                  > \n                        \n                  Click the + button\n                  </div>\n                  <div>\n                        to add questions to the deck\n                  </div>\n              </div>\n\n              :\n              <>\n          <div\n              className='divStyling' \n              style={{opacity: paused? '0': '1'}}\n              >\n                To study:   \n\n                <input \n                    type='number' \n                    className='inputStyling' \n                    style={{background: paused? style.background: 'none'}}\n                    disabled\n                >   \n\n                </input>\n\n          </div>\n          \n          <div \n              className='divStyling'  \n              style={{opacity: paused? '0': '1'}}\n          >    \n\n              {'To review:'.padEnd(10, '⠀')}  {dataBase.userPreferences.toReview}\n          </div>\n           </>\n          } \n\n          {\n            paused?\n\n              <div \n                  className='deckPausedContainer'\n                  style={{background: colors[index % 5]}}\n              >\n\n                  <div>\n                      Deck is paused. \n                  </div>\n\n                  <div style={{display: 'flex', alignItems: 'center'}}\n                  > \n                        Press:\n                    \n                    <button \n                        className='playButton'\n                        onClick={()=>{\n                                    handlePause()\n                                \n                        }}\n                    >\n\n                        <img \n                            src={playimg}\n                            alt='play' \n                            style={{margin: '6px', cursor: 'pointer'}}                         \n                      />\n\n                    </button>\n                    \n                  </div>\n                  <div>\n                        to unpause the Deck.\n                  </div>\n              </div>\n\n              : \n\n              null\n          }\n\n          {\n            name && data.length !== 0?\n          \n            <div \n                className='divStyling'  \n                style={{opacity: paused? '0': '1'}}\n            >\n\n                {'Decksize:'.padEnd(10, '⠀')}   {data.length}        \n            </div>\n            :\n            null\n\n          }\n      \n        </div>\n\n        <QuestAnswerTrainOverv \n            name={name} \n            index={index} \n            data={data} \n            paused={paused} \n        />\n        \n        {\n          active  && \n          \n            <AddQuestionsToDeck \n                background={style.background} \n                name= {name} \n                index= {index} \n            />        \n        }\n\n      </Card.Body>\n    </Card>\n  )\n}\n\n\n//adding a facebook login at the very beginning\n\n//   window.fbAsyncInit = function() {\n//     FB.init({\n//       appId      : '699586404315736',\n//       cookie     : true,\n//       xfbml      : true,\n//       version    : 'v9.0'\n//     });\n      \n//     FB.getLoginStatus(function(response) {\n//       statusChangeCallback(response);\n//   });\n      \n//   };\n\n//   (function(d, s, id){\n//      var js, fjs = d.getElementsByTagName(s)[0];\n//      if (d.getElementById(id)) {return;}\n//      js = d.createElement(s); js.id = id;\n//      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n//      fjs.parentNode.insertBefore(js, fjs);\n//    }(document, 'script', 'facebook-jssdk'));\n\n//    function statusChangeCallback(response) {\n//      if (response.status === 'connnected') {\n//        console.log('Logged in and authenticated')\n//      } else {\n//        console.log('Not authenticated');\n//      }\n//    }\n\n//    function checkLoginState() {\n//   FB.getLoginStatus(function(response) {\n//     statusChangeCallback(response);\n//   });\n// }\n\n\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js",["165"],"import React, { useState, useRef, useContext,useEffect } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {Context} from '../../Context';\n\nimport useOutsideAlerter from '../../LittleComponents/useOutsideAlerter'\n\nimport trashimg from '../../icons/trash.svg'\nimport pauseimg from '../../icons/pause.svg'\nimport editimg from '../../icons/edit.svg'\nimport resetimg from '../../icons/reset.svg'\nimport saveimg from '../../icons/save.svg'\nimport playimg from '../../icons/play.svg'\n\n\nfunction ThreeDotsBtn({    \n                        text, //this for smth\n                        name,\n                        showFromParent, style, \n                        className, editButtonClicked, nameOfTopDeck, \n                        index, input, threeDotsContainer, setEditButtonClicked, \n                        edit=false,trash=false,pause=false,reset=false,\n                        editBtnClicked, data,\n                         paused,\n                        setNameOfTopDeck=()=>{},\n                        editEvent = () => { }, \n                        trashEvent = () => { },\n                        resetEvent = () => { },\n                        pauseEvent = () => {},\n                        type\n                      }) \n\n{\n\n  const [blinkingSaveIcon, setBlinkingSaveIcon] = useState(false)\n  const [pauseIsActive, setPauseIsActive] = useState(true)\n  const [threeDotsOpen, setThreeDotsOpen] = useState(showFromParent);\n  const {dataBase, setDataBase} = useContext(Context);\n\n\n  const handleClick = () => {\n    setThreeDotsOpen(!threeDotsOpen);\n    // setShowFromParent(!show)\n\n  };\n\n  const ref = useRef(null)\n\n  useEffect(()=>{\n    setThreeDotsOpen(showFromParent)\n  },[showFromParent])\n\n\n  function handleDeckname() {\n    let newDataBase = {...dataBase}\n    newDataBase.DeckNames[index].name = nameOfTopDeck\n    //delete newDataBase.DeckNames[name]\n    console.log(newDataBase)\n    setDataBase(newDataBase)\n  }\n\n\n  useOutsideAlerter([ref,input], \n                    editButtonClicked, \n                    ()=>{\n                      setThreeDotsOpen(false)\n                    },\n                    ()=>{\n                    setBlinkingSaveIcon(true)\n                    setTimeout(()=>{\n                      setBlinkingSaveIcon(false)},\n                      2000)\n                    }                  \n  )\n    \n    \n  function handleEdit() {\n    editEvent() \n    if(type==='card'){\n      handleClick()\n    }\n    // !editName && setShow(false) \n    // other way of writing it\n    if (!editButtonClicked) {\n      // setThreeDotsOpen(false)\n      handleDeckname()\n    }\n  }\n  \n\n  function handlePause () {\n    pauseEvent()\n\n    let newDataBase = {...dataBase}\n    let savePausedState = !pauseIsActive\n    setPauseIsActive(savePausedState)\n\n    dataBase.DeckNames[index].paused = !dataBase.DeckNames[index].paused\n\n    let key = newDataBase.DeckNames.findIndex(deck=>deck.name === name)\n    newDataBase.DeckNames[key].paused = true\n    setDataBase(newDataBase)\n    setEditButtonClicked(true)\n    setThreeDotsOpen(false)\n    setNameOfTopDeck(name)\n    \n  }\n\n\n  {/* || data.length===0? */}\n  //paused?\n  return (\n    <>\n    {\n      dataBase?.DeckNames?.[index]?.paused || editBtnClicked ?\n    \n      null\n         :\n      <div style={threeDotsContainer}\n      >\n        <div \n            className='rotateLittleModal' \n            style={{height: '24px'}}\n            onClick={\n                editButtonClicked? \n\n                handleClick                \n                  : \n                ()=>{} \n            } \n          >\n                  ...\n       \n        </div>\n\n        {\n          threeDotsOpen && \n          \n          <div \n            ref={ref}\n            style={style}\n            className={`ml-2 rounded mt-2 ${className}`}\n          >\n\n            {\n              edit&& data.length !==0 &&\n\n              <button \n                  className='buttonStyling flexAlignCenter outline-none p-1 '\n                  onClick={handleEdit} \n              >\n                      \n                  <img \n                      alt='edit' \n                      style={{ marginRight: '3px' }}              \n                      className={ blinkingSaveIcon ? 'blinkingIcon':'' } \n                      src={ editButtonClicked? editimg: saveimg } \n                  /> \n\n                {text}\n\n              </button>\n            }\n\n            {\n              pause && data.length !==0 &&\n\n\n              <button \n                  className='buttonStyling flexAlignCenter outline-none p-1 '\n                  onClick={handlePause}\n                  style={{\n                          borderTop: '1px solid black', borderBottom: '1px solid black' ,\n                          borderLeft: dataBase.DeckNames[index].paused? '1px solid black': null,\n                          borderRight: dataBase.DeckNames[index].paused? '1px solid black': null,\n                          borderRadius: dataBase.DeckNames[index].paused? '5px': null\n                        }}\n              >\n\n                  <img \n                      alt='pause' \n                      style={{ marginRight: '3px' }} \n                      src={ !dataBase.DeckNames[index].paused? pauseimg: playimg }  \n                  />\n\n                  {text}\n\n              </button>\n            }\n\n            {\n              trash && \n              \n              <button \n                className='buttonStyling flexAlignCenter outline-none p-1'\n                onClick={() => {\n                    trashEvent()\n                    setThreeDotsOpen(false)\n                }}\n              >\n                <img \n                      style={{ marginRight: '3px' }} \n                      src={ trashimg } \n                      alt='trash' \n                />\n\n                {text}\n\n              </button>\n            }\n            {\n              reset &&\n              \n              <button \n                  className='buttonStyling flexAlignCenter outline-none p-1'\n                  onClick={resetEvent}\n              >\n\n                <img \n                    src={resetimg} \n                    alt='reset' \n                    style={{ marginRight: '3px', width: '23px', height: '23px' }}  \n                />\n\n                {text}\n              </button>\n            }\n          </div>\n        }\n      </div>   \n \n    }\n    </>\n  );\n}\n\nexport default  withRouter(ThreeDotsBtn)","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js",["166","167"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/HourlyBreakdown.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CreateNewDeck.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CutWord.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/SaveAndDiscard.js",[],["168","169"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/RepeatBtn.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagramm.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddQuestionsToDeck.js",["170"],"\nimport React, { useState, useContext, useEffect} from 'react';\nimport {Modal, FormControl, Alert } from 'react-bootstrap'\nimport {Context} from '../../Context';\nimport '../styles.css'\n\nimport redCross from '../../icons/redCross.svg'\nimport { HashRouter } from 'react-router-dom';\n\nexport default function AddQuestionsToDeck({  index, name, background }) {\n  \n  const [show, setShow] = useState(false);\n  const [card, setCard] = useState({question:'', answer:''})\n  const [newCardAdded, setNewCardAdded] = useState(false);\n\n  const {dataBase, setDataBase}= useContext(Context);\n\n  function addToDeck(){\n    let newDataBase = {...dataBase}\n      newDataBase.DeckNames[index].data.push(card)\n    //  newDataBase.DeckNames[index].push(card)\n    setDataBase(newDataBase)\n    setCard({question:'', answer:''})\n    setNewCardAdded(true)\n \n  }\n  \n  function changeHandler (e) {\n    console.log(card)\n    let newCard =  {...card}\n    let {name, value} = e.target;\n    newCard[name]=value\n    setCard(newCard)\n    //setCard({...card,[name]:value}) would be another way of writing it\n  }\n  \n//make method when adding was not successful\n\n  useEffect(() => {\n    \n      setTimeout(()=>{setNewCardAdded(false)},500) \n  }, [newCardAdded]);\n  \n\n  return (\n    \n    <div>\n        <button \n            className={'addNewCardsButton outline-none'}\n            style= {{\n              background: dataBase.DeckNames[index].paused? background: null,\n              cursor: dataBase.DeckNames[index].paused? 'default': 'pointer'\n              }}\n        \n            onClick={\n                dataBase.DeckNames[index].paused?\n                \n                null\n                :            \n                () => { \n                  setShow(true)\n                }\n            } \n        >\n        +\n      </button>\n      \n      <Modal\n        show={show}\n        contentClassName={'mod'}\n        backdrop='static'\n        onHide={() => setShow(false)\n        }\n        \n      >\n          <Modal.Header className='border-bottom-0'\n          >\n              <Modal.Title style={{fontSize: '16px'}}\n              >\n\n                  Deck: {name}\n              \n              </Modal.Title>\n\n              <button \n                  className='redCross'\n                  onClick={() => setShow(false)\n                  }\n                >\n\n                    <img \n                        src={redCross} \n                        alt='redCross'                           \n                        className='nonDraggableIcon'\n                    />\n              </button>\n\n            </Modal.Header>\n            <Modal.Body >\n\n                <div className='mb-2'\n                >\n                    <p \n                        className='questionAnswerStyling'\n                    >\n                        Question\n                    </p>\n\n                    <FormControl\n                        as=\"textarea\"\n                        aria-label=\"With textarea\"\n                        value={card.question} \n                        className='w-100'\n                        name='question'\n                        onChange={changeHandler}\n                    />\n\n                    { \n                      newCardAdded?\n\n                          <div \n                              className='d-flex justify-content-center align-items-center'\n                              style={{height: '52px'}}\n                          >\n\n                              <Alert \n                                  variant=\"success\"\n                                  style={{width: '145px', height: '35px'}}\n                              >\n\n                                  Card added to deck.\n                              </Alert>\n\n                          </div>\n\n                          : \n                          null\n                    }\n\n                </div>\n                <div style={{marginTop: newCardAdded? '0px': '60px'}}\n                >\n\n                    <p className='questionAnswerStyling'\n                    >\n                      Answer\n                    </p>\n\n                    <FormControl\n                      as=\"textarea\"\n                      aria-label=\"With textarea\"\n                      value={card.answer}\n                      className='w-100'\n                      name='answer'\n                      onChange={changeHandler}\n                    />\n\n                </div>\n\n                <button \n                    onClick={addToDeck}\n                    className='generalButtonStyling addToDeckButton'\n                >\n\n                    Add to Deck\n                </button>\n\n            </Modal.Body>\n\n      </Modal>\n      \n    </div>\n  )\n}\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardname.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/QuestAnswerTrainOverv.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/LandingPage.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/MenuContainer.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/BasicOrangeWindow.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Hexagons.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/RepetitionIntervalFields.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/SomeTest.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardName.js",[],{"ruleId":"171","severity":1,"message":"172","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":12},{"ruleId":"171","severity":1,"message":"175","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":16},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":45,"column":5,"nodeType":"182","endLine":45,"endColumn":24,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":109,"column":3,"nodeType":"186","messageId":"187","endLine":109,"endColumn":30},{"ruleId":"171","severity":1,"message":"188","line":1,"column":16,"nodeType":"173","messageId":"174","endLine":1,"endColumn":24},{"ruleId":"180","severity":1,"message":"189","line":13,"column":5,"nodeType":"182","endLine":13,"endColumn":7,"suggestions":"190"},{"ruleId":"176","replacedBy":"191"},{"ruleId":"178","replacedBy":"192"},{"ruleId":"171","severity":1,"message":"193","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-native-reassign",["194"],"no-negated-in-lhs",["195"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setChangeDeckNameOpen'. Either include it or remove the dependency array. If 'setChangeDeckNameOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["196"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'inputDom.value'. Either include it or remove the dependency array.",["197"],["194"],["195"],"'HashRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [editButtonClicked, setChangeDeckNameOpen]",{"range":"202","text":"203"},"Update the dependencies array to be: [inputDom.value]",{"range":"204","text":"205"},[1529,1548],"[editButtonClicked, setChangeDeckNameOpen]",[265,267],"[inputDom.value]"]