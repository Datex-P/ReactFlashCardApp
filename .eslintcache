[{"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js":"1","/Users/fab/Downloads/reactapp/flashcardreact/src/App.js":"2","/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js":"3","/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx":"4","/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx":"5","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js":"6","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js":"7","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js":"8","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js":"9","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js":"10","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js":"11","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js":"12","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js":"13","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js":"14","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js":"15","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js":"16","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js":"17","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js":"18","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js":"19","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js":"20","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js":"21","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/HourlyBreakdown.js":"22","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CreateNewDeck.js":"23","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CutWord.js":"24","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/SaveAndDiscard.js":"25","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/RepeatBtn.js":"26","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagramm.js":"27","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddQuestionsToDeck.js":"28","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardname.js":"29","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/QuestAnswerTrainOverv.js":"30","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/LandingPage.js":"31","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/MenuContainer.js":"32","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/BasicOrangeWindow.js":"33","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Hexagons.js":"34","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/RepetitionIntervalFields.js":"35","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardName.js":"36","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/InputCheckbox.js":"37","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js":"38","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagrammMain.js":"39"},{"size":511,"mtime":1608033487654,"results":"40","hashOfConfig":"41"},{"size":776,"mtime":1608039712942,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1608015684888,"results":"43","hashOfConfig":"41"},{"size":1070,"mtime":1608044007107,"results":"44","hashOfConfig":"41"},{"size":1070,"mtime":1608044007107,"results":"45","hashOfConfig":"41"},{"size":680,"mtime":1619794415401,"results":"46","hashOfConfig":"47"},{"size":812,"mtime":1619870997616,"results":"48","hashOfConfig":"47"},{"size":294,"mtime":1619855279139,"results":"49","hashOfConfig":"47"},{"size":5069,"mtime":1619866195251,"results":"50","hashOfConfig":"47"},{"size":816,"mtime":1619856834510,"results":"51","hashOfConfig":"47"},{"size":6630,"mtime":1619938126661,"results":"52","hashOfConfig":"47"},{"size":1167,"mtime":1613374262077,"results":"53","hashOfConfig":"47"},{"size":290,"mtime":1609859876733,"results":"54","hashOfConfig":"47"},{"size":181,"mtime":1609860000402,"results":"55","hashOfConfig":"47"},{"size":3686,"mtime":1620036026438,"results":"56","hashOfConfig":"47"},{"size":1707,"mtime":1610306068828,"results":"57","hashOfConfig":"47"},{"size":6106,"mtime":1619865496400,"results":"58","hashOfConfig":"47"},{"size":366,"mtime":1610617679230,"results":"59","hashOfConfig":"47"},{"size":535,"mtime":1610617895840,"results":"60","hashOfConfig":"47"},{"size":7046,"mtime":1620039043439,"results":"61","hashOfConfig":"47"},{"size":3907,"mtime":1619531969391,"results":"62","hashOfConfig":"47"},{"size":1331,"mtime":1619884935265,"results":"63","hashOfConfig":"47"},{"size":4917,"mtime":1620039249960,"results":"64","hashOfConfig":"47"},{"size":184,"mtime":1612525158894,"results":"65","hashOfConfig":"47"},{"size":1524,"mtime":1619937885211,"results":"66","hashOfConfig":"47"},{"size":484,"mtime":1619517800403,"results":"67","hashOfConfig":"47"},{"size":3876,"mtime":1619952202381,"results":"68","hashOfConfig":"47"},{"size":5543,"mtime":1619941174297,"results":"69","hashOfConfig":"47"},{"size":1377,"mtime":1613223098309,"results":"70","hashOfConfig":"47"},{"size":16250,"mtime":1620038944462,"results":"71","hashOfConfig":"47"},{"size":9047,"mtime":1620035244316,"results":"72","hashOfConfig":"47"},{"size":4966,"mtime":1619937987266,"results":"73","hashOfConfig":"47"},{"size":3173,"mtime":1620024590702,"results":"74","hashOfConfig":"47"},{"size":2370,"mtime":1614418986231,"results":"75","hashOfConfig":"47"},{"size":2912,"mtime":1619853931869,"results":"76","hashOfConfig":"47"},{"size":1735,"mtime":1619441079602,"results":"77","hashOfConfig":"47"},{"size":2137,"mtime":1620024467860,"results":"78","hashOfConfig":"47"},{"size":11656,"mtime":1620037755306,"results":"79","hashOfConfig":"47"},{"size":2645,"mtime":1619937952400,"results":"80","hashOfConfig":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s5fd1k",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"gggxqh",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"93"},"/Users/fab/Downloads/reactapp/flashcardreact/src/index.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/App.js",["165"],"/Users/fab/Downloads/reactapp/flashcardreact/src/reportWebVitals.js",[],"/Users/fab/Downloads/reactapp/flashcardreact/src/imageChanger.jsx",["166"],"/Users/fab/Downloads/reactapp/flashcardreact/src/ImageChanger.jsx",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/index.js",[],["167","168"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/App.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/NavBar.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/Stats.js",["169"],"import React, { useState, useEffect, useContext} from 'react';\nimport { Context } from '../../Context'\nimport BasicOrangeWindow from '../deck/BasicOrangeWindow'\nimport ThreeDotsBtn from '../deck/ThreeDotsBtn'\nimport { withRouter } from 'react-router-dom'\nimport PieDiagramm from './PieDiagramm';\nimport TimeAndProgress from './TimeAndProgress.js'\nimport HourlyBreakdown from './HourlyBreakdown.js'\nimport DeleteCardQuestionBox from '../deck/DeleteCardQuestionBox'\n\n\n\nfunction Stats({ history}) {\n\n  const [showDeleteFrame, setShowDeleteFrame] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const [show,setShow] = useState(false);\n const {setShowProgressDiagram } = useContext(Context)\n  \n \n  function setShowFunc() {\n    history.push('/')\n    setShowProgressDiagram(true)\n  }\n\n  useEffect(()=>{\n    setShowProgressDiagram(false)\n  },[])\n\n\n\n\n  return (\n\n    <div style={{width: '70%', height: '50%'}}\n    >\n\n      <BasicOrangeWindow\n    \n        show={true}\n        setShow={setShowFunc}\n        title={\n          \n          <div style={{fontSize: '22px', fontWeight: 'bold'}}\n          >\n              Stats\n          </div>}\n        menu={\n          <ThreeDotsBtn\n       \n           \n            text={'stats'}\n            className='resetButtonStyling'\n            editButtonClicked\n            resetEvent={() => {\n              //!editButtonClicked\n              setShow(!show)\n              console.log('erjngjkerngkjrne')\n              setShowDeleteFrame(true);\n              \n            //  reset=false\n            }}\n\n            reset\n          />\n        }\n      >\n\n        <div>\n\n          <div className='studyBreakdownHeader'\n          >\n              Today's study breakdown\n          </div>\n\n          <div \n              style={{ marginBottom: '10px', border: '1px solid black'}} \n              className='d-flex flex-direction column align-items-center'\n          >\n\n            {\n              showDeleteFrame &&\n              \n                <DeleteCardQuestionBox\n                  resetQuestionText\n                  showMessageAgain\n                  card='card'\n                  checked = {checked}\n                  setChecked = {setChecked}\n                  showDeleteWindow={showDeleteFrame}\n                  deleteWindow={() => \n                    setShowDeleteFrame(false)\n                  }\n                  // trashEvent={deleteCurrentCard}\n                  onHide={ ()=>{ }}\n                  />\n            }\n\n            <PieDiagramm />\n\n          </div>\n\n          <div \n              className='theWordCalendar' \n          >\n              Calendar\n\n          </div>\n\n          <div className='d-flex align-items-center justify-content-center'\n          >\n\n            <ButtonLeftAndRight />\n          </div>\n\n          <HourlyBreakdown\n            key='1'\n           />\n\n        </div>\n\n        <div style={{width: '200px'}}\n        >\n\n        </div>\n\n        <TimeAndProgress/>\n\n      </BasicOrangeWindow>\n\n\n    </div>\n  )\n}\n\nexport default withRouter(Stats)\n\n\n\n\nfunction ButtonLeftAndRight() {\n  const [year, setYear] = useState(new Date().getFullYear())\n\n\n  const handleIncrement = () => {\n    setYear(year + 1);\n  };\n\n  const handleDecrement = () => {\n    setYear(year - 1);\n  };\n\n  return (\n\n    <div style={{display: 'flex', flexDirection: 'column'}}\n    >\n\n      <div \n          className='d-flex justify-content-center align-items-center' \n          style={{marginTop: '-10px'}}\n      >\n\n          {\n        \n            ['<', year, '>'].map(el =>\n\n              <div style={{ \n                            width: '33px',\n                            cursor: el === year ? 'default' : 'pointer', \n                            margin: el === year ? '5px' : ''\n                            }}\n\n                className={\n                          el !== year ? \n                          'd-flex justify-content-center align-items-center calendarButtons' \n                              : \n                          ' align-items-center flex justify-content-center'}\n\n                onClick={el === '<' && el !== year ?\n                          handleDecrement \n                          : \n                          handleIncrement\n                }\n              >\n\n                {el}\n              </div>\n              )\n          }\n\n      </div>\n\n        <RenderDays />\n    </div>\n  )\n}\n\nfunction RenderDays () {\n\n const [year] = useState(new Date().getFullYear())\n const [days, setDays] = useState([])\n\n  useEffect(()=> {\n\n    let date = [];\n    let thisYear = new Date(`January 1, ${+year}`);\n    \n    while (\n        thisYear.getMonth() !== 0 ||\n        thisYear.getDate() !== 1 ||\n        thisYear.getFullYear() === +year\n        ) \n        {\n        date.push(thisYear.toDateString())\n        thisYear.setDate(thisYear.getDate() + 1);\n        }\n        setDays(date)\n  \n}, [year])\n\n\nreturn (\n\n    <div className= 'yearBoxContainer'\n    >\n\n        {\n          days.map(day=>\n          <div className='day'\n          >\n          </div>)\n        }\n\n  </div>\n  )\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/Icon.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/ThreeDotsBtn.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LittleComponents/useOutsideAlerter.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Parent.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/parent_child/Child.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Context.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/class/index.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Settings.js",["170"],"import React, { useState, useContext, useEffect} from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Context } from '../../Context'\nimport Hexagons from  './Hexagons'\nimport RepetitionIntervalFields from './RepetitionIntervalFields'\n\nimport BasicOrangeWindow from '../deck/BasicOrangeWindow'\nimport '../styles.css'\nimport edit from '../../icons/edit.svg'\nimport save from '../../icons/save.svg'\n\n\n\nfunction Settings({ history }) {\n  const [editIsPossible, setEditIsPossible] = useState(false)\n  const [saveOrEdit, setSaveOrEdit] = useState(false)\n  const [saveOrEditGoal, setSaveOrEditGoal] = useState(false)\n  const [editHex, setEditHex] = useState(true)\n  \n  const { dataBase, setDataBase,setShowProgressDiagram } = useContext(Context)\n  const [userTimePreferences, setUserTimePreferences] = useState({})\n\n  useEffect(() => {\n    setUserTimePreferences(dataBase?.userTimePreferences || {})\n  }, [dataBase?.userTimePreferences])\n\n    useEffect(()=>{\n      setShowProgressDiagram(false)\n    },[])\n\n  function setShow() {\n    history.push('/')\n    setShowProgressDiagram(true)\n  }\n\n  function handleColor(e) {\n    let newDataBase = { ...dataBase }\n    newDataBase.userPreferences[e.target.name] = e.target.value\n   // this.checked = true\n   //checked={true}\n    setDataBase(newDataBase)\n  }\n\n\n  function saveTimeNumberChanges() {\n    let newDataBase = { ...dataBase }\n    newDataBase.userTimePreferences = userTimePreferences\n    setDataBase(newDataBase)\n  }\n\n  return (\n\n    dataBase &&\n\n    <BasicOrangeWindow\n      show={true}\n      setShow={setShow}\n      title={\n\n        <div\n          style={{fontWeight: 'bold', fontSize: '22px'}}\n          contentClassName={'pos'}\n        >\n\n          Settings\n       </div>\n      } \n    >\n      <div style={{ fontWeight: 'bold', fontSize: '17px', textAlign: 'center', marginBottom: '8px' }}\n      >\n\n          Change Repetition Interval\n      </div>\n      <div className='d-flex justify-content-center'\n      >\n          <div \n              className='d-flex border border-dark justify-content-center align-items-center'\n              style={{ padding: '1px', borderRadius: '5px', position: 'relative', width: '284px', height:'88px' }}\n          >\n              <div \n                  className='d-flex justify-content-around align-items-center' \n                  style={{width: '280px'}}\n              >\n                  {\n                    dataBase &&\n                      \n                      dataBase.userTimePreferences.map((col, k) =>\n\n                      <RepetitionIntervalFields\n                          key={k} \n                          index={k} \n                          data={col} \n                          saveOrEdit={saveOrEdit}\n                          editIsPossible={editIsPossible} \n                          userTimePreferences={userTimePreferences} \n                          setUserTimePreferences={setUserTimePreferences} \n                      />\n                      )\n                  }\n                </div>\n              \n          </div>\n          <div \n              title='Click and change name buttons and repetition intervals for all decks.'\n              style={{ position: 'absolute', right: '11px', top: '77px', cursor: 'pointer' }}\n          >\n              <img\n                  src={saveOrEdit ? save : edit}\n                  alt={saveOrEdit ? 'save' : 'edit'}\n                  className= 'nonDraggableIcon'\n                  style={{ outline: 'none' }}\n                  onClick={() => {\n                          setEditIsPossible(!editIsPossible)\n                          setSaveOrEdit(!saveOrEdit)\n                          saveTimeNumberChanges()\n                        }}\n              />\n          </div>\n      </div>\n\n      <div \n          className='goalSettingsContainer'\n      >\n          Goal Settings\n      </div>\n\n      <div style={{ fontWeight: 'bold', fontSize: '13px', textAlign: 'center', marginBottom: '2px' }}\n      >\n          Current Weekly Target\n      </div>\n\n      <div \n        className='d-flex border border-dark justify-content-between align-items-center hexagonContainer'\n      >\n        {\n\n          Array(7).fill('').map((el, idx) =>\n\n            <Hexagons \n                idx={idx} \n                editHex={editHex} \n                setEditHex={setEditHex} \n                saveOrEditGoal={saveOrEditGoal} \n            />\n          )\n        }\n      </div>\n      <div style={{ position: 'absolute', top: '232px', right: '50px', cursor: 'pointer' }}\n      >\n        <img\n          src={editHex ? edit : save}\n          alt={saveOrEditGoal ? 'edit' : 'save'}\n          style={{ outline: 'none' }}\n          className= 'nonDraggableIcon'\n          \n          onClick={() => {\n            setSaveOrEditGoal(!saveOrEditGoal)\n            setEditHex(!editHex)\n          }}\n        />\n      </div>\n      <div className='weeklyTarget'\n      >\n\n        Target met: {dataBase.userPreferences.weeksInRow} weeks in a row\n\n      </div>\n      <div style={{ fontWeight: 'bold', textAlign: 'center', marginTop: '20px', marginBottom: '2px' }}\n      >\n          Colorscheme\n      </div>\n\n      <div \n          className='d-flex border border-dark justify-content-between align-items-center'\n          style={{borderRadius: '5px', padding: '5px', width: '215px', marginTop: '10px', margin: 'auto'}}\n      >\n\n        {\n          ['light', 'dark', 'default'].map(comp =>\n            <>\n              <input \n                style={{ cursor: 'pointer' }}\n                name='backgroundColor'\n                type='radio'\n                // title = `Change background color of main menu to ${comp}.`\n                value={comp}\n                //checked={false}\n                checked ={dataBase.userPreferences?.backgroundColor === comp}  //how to combine checked and handleColor accurately?\n                onChange={handleColor}\n              />\n              <label className='mb-0'>\n                  {comp}\n              </label>\n            </>\n          )\n        }\n      </div>\n\n    </BasicOrangeWindow>\n  )\n}\n\nexport default withRouter(Settings)\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Refvsdom.js",["171","172"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/LearnUseRef.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeleteCardQuestionBox.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/TimeAndProgress.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/HourlyBreakdown.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CreateNewDeck.js",["173"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CutWord.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/SaveAndDiscard.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/CardBodyParts/RepeatBtn.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagramm.js",["174","175","176","177"],"import React, {useEffect, useRef, useContext} from 'react'\nimport Chart from \"chart.js\";\nimport {Context} from '../../Context'\n\nexport default function ChartComp() {\n\n  const { dataBase, setDataBase } = useContext(Context);\n  let ctx = useRef(null)\n  let todayDate = new Date();\n\n // console.log(dataBase.openedToday, 'openedToday')\n\n  useEffect(() => {\n\n\n    var config = {\n      type: 'doughnut',\n      data: {\n        labels: [\n          // \"Red\",\n          // \"Green\",\n          // \"Yellow\"\n        ],\n        datasets: [{\n          data: [\n            //  300, 50, 100\n          ],\n          backgroundColor: [\n            //  \"#FF6384\",\n            // \"#36A2EB\",\n            // \"#FFCE56\"\n          ],\n          borderColor: [\n            //  'rgba(184, 156, 110, 0.95)',\n            // 'rgba(184, 156, 110, 0.95)',\n            // 'rgba(184, 156, 110, 0.95)'\n          ],\n          borderWidth: 1,\n          hoverBackgroundColor: [\n           \"#FF6384\",\n            // \"#36A2EB\",\n            // \"#FFCE56\"\n          ]\n        }]\n      },\n      options: {\n        elements: {\n        center:{\n\n          text: 'hello how is it going'\n          // text: !dataBase.openedToday ? 'No cards studied today'\n          // //<div style='font-size:12px'>No data</div> \n          // :\n          // `Data from ${todayDate.toLocaleString('de-DE', {\n          //   day: 'numeric',\n          //   month: 'numeric',\n          //   year: 'numeric',\n          // })}`\n\n          // text: !dataBase.openedToday ? 'No cards studied today'\n          // //<div style='font-size:12px'>No data</div> \n          // :\n          // 'bla nla'\n\n\n          // `Data from ${todayDate.toLocaleString('de-DE', {\n          //   day: 'numeric',\n          //   month: 'numeric',\n          //   year: 'numeric',\n          // })}`\n          // center: {\n          //   text: `Data from ${new Date().toLocaleString('de-DE', {\n          //     day: 'numeric',\n          //     month: 'numeric',\n          //     year: 'numeric',\n          //   })}`,\n\n        //   center:{\n        // text: \n        // //!dataBase.openedToday ? \n        // 'No cards studied today' : `Data from ${todayDate.toLocaleString('de-DE', {\n\n        //     day: 'numeric',\n        //     month: 'numeric',\n        //     year: 'numeric',\n        //   })}`\n        //   ,\n        //     //color: '#FF6384', // Default is #000000\n        //     color: 'black',\n        //     fontStyle: 'Arial', // Default is Arial\n        //     sidePadding: 2, // Default is 20 (as a percentage)\n        //     minFontSize: 14, // Default is 20 (in px), set to false and text will not wrap.\n        //     lineHeight: 19,\n        //     // Default is 25 (in px), used for when text wraps\n        //   }\n        }\n      },\n        legend: {\n          position: 'bottom',\n          labels: {\n            fontColor: 'black'\n          }\n\n        },\n        cutoutPercentage: 81,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            top: 10\n          },\n          border: 'none'\n        }\n      }\n    };\n\n    function updateChart() {\n\n      config.data.datasets[0].data = [10, 20, 30, 40, 50];\n      config.data.datasets[0].backgroundColor = ['green', 'blue', 'yellow',\n        'purple', 'red'];\n      config.data.datasets[0].borderColor = ['green', 'blue', 'yellow',\n        'purple', 'red']\n      config.data.hoverBackgroundColor = ['green', 'blue', 'yellow',\n        'purple', 'red']\n      config.data.labels = ['green', 'blue', 'yellow',\n        'purple', 'red']\n\n      //config.update()\n    }\n   // updateChart()\n\n    new Chart(ctx.current, config);\n\n  }, [])\n\n\n  return (\n    <canvas \n        ref={ctx} \n        className='pieChart'\n        style={{ width: '270px', height: '200px', overflow: 'hidden', borderRadius: '5px' }} \n    >\n\n    </canvas>\n\n  )\n}\n\n// document.querzSelector('canvas').value == ctx.current.value","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/AddQuestionsToDeck.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardname.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/QuestAnswerTrainOverv.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/LandingPage.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/MenuContainer.js",["178"],"import React, { useState, useContext } from 'react';\nimport { Modal } from 'react-bootstrap'\nimport { Context } from '../Context'\nimport './styles.css';\n\nimport Icon from '../LittleComponents/Icon'\n\nimport settingsIcon from '../icons/settings.svg';\nimport statsIcon from '../icons/stats.svg';\nimport logoutIcon from '../icons/logout.svg';\n\n\nexport default function MenuContainer({\n    editButtonClicked, //set to false when editButton is not clicked gets activated when editButton is clicked\n\n\n} \n    ) {\n\n  const [show, setShow] = useState(false); //opens the Menu when set to true\n\n  const { dataBase, setDataBase, styles,showProgressDiagram, setShowProgressDiagram } = useContext(Context)\n  const handleClose = () => setShow(false); // closes the Menu when handleclos is triggered\n\n  function triggerDiagramAndState () {\n    setShow(!show)\n    setShowProgressDiagram(!showProgressDiagram)\n  }\n\n  return (\n    <div \n        className='mx-auto'\n        style={{\n                backgroundColor: dataBase && styles.backgroundColor[dataBase.userPreferences.backgroundColor],\n                zIndex: '100', borderTopLeftRadius: '10px', borderTopRightRadius: '10px', width: '440px'\n                }}\n    >\n        <div className='menu flexColumnAlignCenter p-3'\n             style= {{cursor: !editButtonClicked? 'default': 'pointer'}} //cursor is default when edit input field is activated\n        >\n            <div style={{fontSize: '18px'}}>\n                    Menu\n            </div>\n            <div \n                className='menuContainer flexColumnAlignCenter' \n                onClick={() => \n                 !editButtonClicked?\n                    null\n                    :\n                    triggerDiagramAndState()\n                }\n            >\n                <div \n                    className={'menuIcon ' + (show ? 'transPlus' : ' ')} \n                    style={{ top: show ? '8px' : '0px' }}\n                >\n                </div>\n                \n                {\n                  !show && \n\n                      <div className={'menuIcon'} style={{ top: '8px' }}\n                      >                \n\n                      </div>\n                }\n\n                <div \n                    className={'menuIcon ' + (show ? 'transMinus' : ' ')} \n                    style={{top: show ? '8px' : '16px' }}\n                >  \n\n                </div>\n            </div>\n        </div>\n\n        {\n          show && editButtonClicked?\n\n          <>\n              <Modal \n                  show={show} \n                  onHide={handleClose} \n                  contentClassName={'modNew'} \n                  dialogClassName='align-items-start  pl-3' \n                  centered\n              >\n                  <Modal.Body \n                      className='p-0' \n                      style={{position: 'relative', top: '42px', left: '10px'\n                              }}\n                  >\n                      <div \n                          className='menuStyling nonDraggableIcon' \n                          onClick={()=>{setShow(false)\n                           }}\n                      >\n                          <Icons \n                               icons={[\n                                      { \n                                      src: statsIcon, \n                                      alt: 'statsIcon', \n                                      href: 'stats', \n                                      style: {  width: 'calc(100% / 3)',  padding: '3px', paddingLeft: '15px' \n                                             } \n                                        \n                                      },\n                                      {\n                                        src: settingsIcon, \n                                        alt: 'settingsIcon', \n                                        href: 'settings', \n                                        style: {  width: 'calc(100% / 3)', padding: '3px', \n                                        borderLeft: '2px solid black', \n                                        borderRight: '2px solid black', paddingLeft: '15px' \n                                                } \n                                        },\n                                      { \n                                        src: logoutIcon, \n                                        alt: 'logoutIcon', \n                                        href: 'logout', \n                                        style: { width: 'calc(100% / 3)', padding: '3px', paddingLeft: '15px'\n                                                } \n                                      }\n                                    ]}\n                          />\n                      </div>\n                  </Modal.Body>\n              </Modal>\n          </>\n          :\n          null\n        }\n    </div>\n  )\n}\n\nfunction Icons({ icons }) {\n  return (\n      icons.map((icon, key) => <Icon key={key} {...icon} />)\n  )\n}","/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/BasicOrangeWindow.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/Hexagons.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Settings/RepetitionIntervalFields.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/DeckOrCardName.js",[],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/InputCheckbox.js",["179"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/deck/index.js",["180"],"/Users/fab/Downloads/RoutingTest/newStuff/ReactFlashCardApp/src/Deck/Stats/PieDiagrammMain.js",["181","182","183"],"import React, {useEffect, useRef, useContext} from 'react'\nimport Chart from \"chart.js\";\nimport {Context} from '../../Context'\n\nexport default function ChartComp() {\n\n  const { dataBase, setDataBase } = useContext(Context);\n  let ctx = useRef(null)\n\n // console.log(dataBase.openedToday, 'openedToday')\n\n  useEffect(() => {\n\n\n    var config = {\n      type: 'doughnut',\n      data: {\n        legend:{\n          labels:{\n            generateLabels: function(){\n              return ''\n            }\n          }\n        }\n        ,\n        datasets: [{\n          data: [\n            300, 50, 100\n          ],\n          backgroundColor: [\n            \"#FF6384\",\n            \"#36A2EB\",\n            \"#FFCE56\"\n          ],\n          borderColor: [\n            \"#5aaa95\", \"#FF6384\"\n          ],\n          borderWidth: 0,\n          // hoverBackgroundColor: [\n          //   \"#FF6384\",\n          //   \"#36A2EB\",\n          //   \"#FFCE56\"\n          // ]\n        }]\n      },\n      options: {\n        center:{\n        elements: {\n\n          // text: `Daily Goal \\n ${(dataBase.deckCompleted * 100) /\n          //   Object.keys(dataBase.DeckNames).length} %`,\n\n          fontStyle: \"Times\", // Default is Arial\n          // sidePadding: 2, // Default is 20 (as a percentage)\n          minFontSize: 12, // Default is 20 (in px), set to false and text will not wrap.\n\n          // lineHeight: 19,\n          // Default is 25 (in px), used for when text wraps\n         \n        },\n      },\n        tooltips: false, //removes the tooltips from the diagram that are present in the diagram in stats\n        hover: {mode: null}, //when hovered over the diagram sections, nothing flashes or highlights\n      \n     \n        \n        cutoutPercentage: 81,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            top: 10\n          },\n          border: 'none'\n        }\n      }\n    };\n\n    function updateChart() {\n\n      config.data.datasets[0].data = [10, 20, 30, 40, 50];\n      config.data.datasets[0].backgroundColor = ['green', 'blue', 'yellow',\n        'purple', 'red'];\n      config.data.datasets[0].borderColor = ['green', 'blue', 'yellow',\n        'purple', 'red']\n      config.data.hoverBackgroundColor = ['green', 'blue', 'yellow',\n        'purple', 'red']\n      config.data.labels = ['green', 'blue', 'yellow',\n        'purple', 'red']\n\n      //config.update()\n    }\n   // updateChart()\n\n    new Chart(ctx.current, config);\n\n  }, [])\n\n\n  return (\n    <canvas \n        ref={ctx} \n        className='pieChart'\n        style={{ width: '110px', height: '110px', overflow: 'hidden', borderRadius: '5px' }} \n    >\n\n    </canvas>\n\n  )\n}\n",{"ruleId":"184","severity":1,"message":"185","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":12},{"ruleId":"184","severity":1,"message":"188","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":16},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":28,"column":5,"nodeType":"195","endLine":28,"endColumn":7,"suggestions":"196"},{"ruleId":"193","severity":1,"message":"194","line":29,"column":7,"nodeType":"195","endLine":29,"endColumn":9,"suggestions":"197"},{"ruleId":"184","severity":1,"message":"198","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},{"ruleId":"193","severity":1,"message":"199","line":13,"column":5,"nodeType":"195","endLine":13,"endColumn":7,"suggestions":"200"},{"ruleId":"193","severity":1,"message":"194","line":23,"column":6,"nodeType":"195","endLine":23,"endColumn":24,"suggestions":"201"},{"ruleId":"184","severity":1,"message":"202","line":7,"column":11,"nodeType":"186","messageId":"187","endLine":7,"endColumn":19},{"ruleId":"184","severity":1,"message":"203","line":7,"column":21,"nodeType":"186","messageId":"187","endLine":7,"endColumn":32},{"ruleId":"184","severity":1,"message":"204","line":9,"column":7,"nodeType":"186","messageId":"187","endLine":9,"endColumn":16},{"ruleId":"184","severity":1,"message":"205","line":116,"column":14,"nodeType":"186","messageId":"187","endLine":116,"endColumn":25},{"ruleId":"184","severity":1,"message":"203","line":22,"column":21,"nodeType":"186","messageId":"187","endLine":22,"endColumn":32},{"ruleId":"184","severity":1,"message":"198","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"206","line":55,"column":5,"nodeType":"195","endLine":55,"endColumn":24,"suggestions":"207"},{"ruleId":"184","severity":1,"message":"202","line":7,"column":11,"nodeType":"186","messageId":"187","endLine":7,"endColumn":19},{"ruleId":"184","severity":1,"message":"203","line":7,"column":21,"nodeType":"186","messageId":"187","endLine":7,"endColumn":32},{"ruleId":"184","severity":1,"message":"205","line":78,"column":14,"nodeType":"186","messageId":"187","endLine":78,"endColumn":25},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setShowProgressDiagram'. Either include it or remove the dependency array.","ArrayExpression",["210"],["211"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'inputDom.value'. Either include it or remove the dependency array.",["212"],["213"],"'dataBase' is assigned a value but never used.","'setDataBase' is assigned a value but never used.","'todayDate' is assigned a value but never used.","'updateChart' is defined but never used.","React Hook useEffect has a missing dependency: 'setChangeDeckNameOpen'. Either include it or remove the dependency array. If 'setChangeDeckNameOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"215","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [setShowProgressDiagram]",{"range":"224","text":"225"},{"range":"226","text":"225"},"Update the dependencies array to be: [inputDom.value]",{"range":"227","text":"228"},"Update the dependencies array to be: [addNewDeckWindow, setShowProgressDiagram]",{"range":"229","text":"230"},"Update the dependencies array to be: [editButtonClicked, setChangeDeckNameOpen]",{"range":"231","text":"232"},[854,856],"[setShowProgressDiagram]",[1010,1012],[265,267],"[inputDom.value]",[686,704],"[addNewDeckWindow, setShowProgressDiagram]",[2030,2049],"[editButtonClicked, setChangeDeckNameOpen]"]